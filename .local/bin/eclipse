#!/usr/bin/env bash

mode="$XDG_CONFIG_HOME/X11/themes/.mode"

altty="$XDG_CONFIG_HOME/alacritty/colors.toml"
nvm="$XDG_CONFIG_HOME/nvim/lua/config/bg.lua"
rf="$XDG_CONFIG_HOME/rofi/colors.rasi"
ztr="$XDG_CONFIG_HOME/zathura/colorsrc"
dnst_dir="$XDG_CONFIG_HOME/dunst/dunstrc.d"
fcitx5="$XDG_CONFIG_HOME/fcitx5/conf/classicui.conf"

files=("$mode" "$altty" "$nvm" "$rf" "$ztr" "$dnst_dir" "$fcitx5")

current_mode="$(< "$mode")"

show_help()
{
	echo "Usage: script_name [OPTIONS]"
	echo "Options:"
	echo "  -h         Show help"
	echo "  -q         Show current theme mode(light, dark)"
	echo "  -l         Show all files to be changed for switching themes"
	echo "  -o <arg>   Toggle specific application (alacritty, dunst, zathura, rofi, nvim)"
	echo "Example: script_name -q"
}

toggle_xrdb()
{
	if [[ $current_mode == "dark" ]]; then
		xrdb -merge "$XDG_CONFIG_HOME/X11/themes/rose-pine-light" &&
			echo "light" > "$XDG_CONFIG_HOME/X11/themes/.mode"
	else
		xrdb -merge "$XDG_CONFIG_HOME/X11/themes/rose-pine-dark" &&
			echo "dark" > "$XDG_CONFIG_HOME/X11/themes/.mode"
	fi
}

toggle()
{
	[[ -z "$1" ]] && return 1
	path="$1"

	if [[ $current_mode == "dark" ]]; then
		sed -i 's/dark/light/' "$path"
	else
		sed -i 's/light/dark/' "$path"
	fi
}

toggle_dunst()
{
	rename 01 02 "$dnst_dir/01.conf" &&
		rename 00 01 "$dnst_dir/00.conf" &&
		rename 02 00 "$dnst_dir/02.conf" &&
		killall dunst; dunst &
}

toggle_fcitx5()
{
	if [[ $current_mode == 'dark' ]]; then
		sed -i 's/rose-pine/rose-pine-dawn/' "$fcitx5"
	else
		sed -i 's/rose-pine-dawn/rose-pine/' "$fcitx5"
	fi
	pgrep fcitx5 && fcitx5 -rd &
}

main()
{
	while getopts ":hqlo:" opt; do
		case $opt in
			h)
				show_help
				exit
				;;
			q)
				echo "$current_mode"
				exit
				;;
			l)
				echo "${files[@]}"
				exit
				;;
			o)
				case "$OPTARG" in
					alacritty|altty)
						toggle "$altty"
						;;
					dunst)
						toggle_dunst
						;;
					zathura)
						toggle "$ztr"
						;;
					rofi)
						toggle "$rf"
						;;
					nvim|neovim)
						toggle "$nvm" && killall -s 10 nvim &> /dev/null
						;;
				esac
				exit
				;;
			\?)
				echo "Invalid option: -$OPTARG" >&2
				exit 1
				;;
		esac
	done

	shift $((OPTIND -1))

	toggle_xrdb && fehbg && toggle_dunst && bspc wm -r &&
		toggle_fcitx5 &&
		toggle "$altty" &&
		toggle "$rf" &&
		toggle "$ztr" &&
		toggle "$nvm" && killall -s 10 nvim &> /dev/null
}

main "$@"
