bindkey -v
bindkey -rpM viins '\e'
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# Change cursor shape for different vi modes.
cmd_cursor='\e[2 q'
ins_cursor='\e[6 q'
zle-keymap-select()
{
	if [[ ${KEYMAP} == vicmd ]]; then
		echo -ne "$cmd_cursor"
	elif [[ ${KEYMAP} == main ]] ||
		[[ ${KEYMAP} == viins ]] ||
		[[ ${KEYMAP} = '' ]]; then
		echo -ne "$ins_cursor"
	fi
}
zle -N zle-keymap-select
# preexec() { echo -ne "$ins_cursor" ;} # cursor shape for starting new program.
zle-line-init() # reset cursor after returning to shell
{
	zle -K viins
	echo -ne "$ins_cursor"
}
zle -N zle-line-init
echo -ne "$ins_cursor" # cursor shape on startup.

# ctrl-o
vi-ctrl-o()
{
	zle vi-cmd-mode && zle forward-char
}
zle -N vi-ctrl-o
bindkey -M viins '^o' vi-ctrl-o

# edit in vim with ctrl-e
autoload edit-command-line
zle -N edit-command-line
bindkey -M viins '^e' edit-command-line
bindkey -M vicmd '^e' edit-command-line

# better yankin'
vi-yank-xclip()
{
	zle vi-yank
	echo "$CUTBUFFER" | xclip
}
vi-paste-right()
{
	local paste="$(xclip -o clip)"
	LBUFFER="${LBUFFER}${paste}"
	zle reset-prompt
}
vi-paste-left()
{
	local paste="$(xclip -o clip)"
	RBUFFER="${paste}${RBUFFER}"
	zle reset-prompt
}
zle -N vi-yank-xclip
zle -N vi-paste-right
zle -N vi-paste-left
bindkey -M vicmd 'y' vi-yank-xclip
bindkey -M vicmd 'p' vi-paste-right
bindkey -M vicmd 'P' vi-paste-left
