bindkey -v
bindkey -rpM viins '\e'
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# set prompt
precmd()
{
    PROMPT="%F{blue}%~ %F{yellow}%(1j.[%j] .)%(?.%F{blue}.%F{red})❯%f "
    echo "" # extra new line
}
preexec()
{
    printf '\e[2 q' # reset to steady block cursor
}
zle-line-init() zle-keymap-select()
{
    if [[ $KEYMAP == main ]] || [[ $KEYMAP == viins ]]; then
        PROMPT="%F{blue}%~ %F{yellow}%(1j.[%j] .)%(?.%F{blue}.%F{red})❯%f "
    else
        PROMPT="%F{blue}%~ %F{yellow}%(1j.[%j] .)%(?.%F{magenta}.%F{red})❮%f "
    fi
    zle reset-prompt
    if [[ -n "$SSH_CONNECTION" ]] {
        case $KEYMAP {
            viins|main)
                printf '\e[6 q' # steady bar
                ;;
            *)
                printf '\e[2 q' # steady block
                ;;
        }
    }
}
zle -N zle-line-init
zle -N zle-keymap-select

# ctrl-o
vi-ctrl-o() { zle vi-cmd-mode && zle forward-char }
zle -N vi-ctrl-o
bindkey -M viins '^o' vi-ctrl-o

# edit in vim with ctrl-e
autoload edit-command-line
zle -N edit-command-line
bindkey -M viins '^e' edit-command-line
bindkey -M vicmd '^e' edit-command-line

# better yankin'
vi-yank-xclip()
{
    zle vi-yank
    echo "$CUTBUFFER" | xclip
}
vi-paste-right()
{
    LBUFFER="${BUFFER}$(xclip -o -p)"
    zle reset-prompt
}
vi-paste-left()
{
    RBUFFER="$(xclip -o -p)${RBUFFER}"
    zle end-of-line && zle reset-prompt
}
zle -N vi-yank-xclip
zle -N vi-paste-right
zle -N vi-paste-left
bindkey -M vicmd 'y' vi-yank-xclip
bindkey -M viins -M vicmd ',p' vi-paste-right
bindkey -M viins -M vicmd ',P' vi-paste-left
