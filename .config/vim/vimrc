" === sane defaults ===
syntax enable
set syn=on
set nu
set hid
set tgc
set nosol
set bs=indent,eol,nostop
set bo=all
set t_vb=
set sta sts=4 sw=4
set ttimeout ttm=1
set cb=unnamedplus
set vi+=n~/.vim/.viminfo
set fo+=j
set nolnr
set twk=<c-\\>
set lcs=tab:>\ ,trail:-,nbsp:+
filetype plugin indent on
let g:netrw_dirhistmax = 0

" === leader key ===
let mapleader = " "

" === search ===
set is ic scs

" === file management ===
set ar aw
set noswf
set sbr=>\\
set udf
set udir=~/.vim/undo

" === completion ===
set wmnu
set wop=pum
set wic
set wim=longest:full,full
set cpt-=t,i
set cot=menuone,noinsert,noselect,preview
set shm-=S shm+=cF
set scl=number
set ph=10
set ls=2

" === statusline ===
aug stl
    au!
    au VimEnter * hi default link STL StatusLineNC
    au VimEnter * hi default link STLMode WildMenu
    au ModeChanged *:n* hi clear STLMode | redraws!
    au ModeChanged *:i* hi link STLMode DiffText | redraws!
    au ModeChanged *:[vV\x16]* hi link STLMode Visual | redraws!
aug END
set stl=
set stl+=%#STLMode#%{'\ \ '.toupper(mode()).'\ '}%#STL#
set stl+=%#STLMode#%{&readonly?'\ \|\ '.'RO\ ':''}%#STL#
set stl+=%#STLMode#%{&paste?'\ \|\ '.'P\ ':''}%#STL#
set stl+=%<%{'\ \ '.pathshorten(fnamemodify(getcwd(),':~'),1)}
set stl+=%{expand('%')==''?'':'\ \ \|\ '.pathshorten(fnamemodify(expand('%:p'),\ ':~:.'),1)}
set stl+=%{&modified?'\ \ '.'[+]':''}
set stl+=%=
set stl+=%{'\ \ \ \ '.&fileformat}%{'\ \ \|\ '}
set stl+=%{&fileencoding?&fileencoding:&encoding}%{'\ '.'\ \|\ '}
set stl+=%l:%c%{'\ \|\ '}
set stl+=%p%%
set stl+=%{&filetype==''?'\ ':'\ \|\ '.toupper(&filetype).'\ '}

" === plugins ===
pa! matchit
if !empty(glob('~/.vim/autoload/plug.vim'))
    call plug#begin()
    " Plug 'junegunn/fzf.vim'
    " Plug 'neoclide/coc.nvim', { 'branch' : 'release' }
    " Plug 'antoinemadec/coc-fzf', {'branch': 'release'}
    " Plug 'vimwiki/vimwiki', { 'on' : 'VimwikiUISelect' }
    " Plug 'mbbill/undotree'
    " Plug 'zijian-x/gruvbox-material'
    call plug#end()

    " === misc oneliners ===
    nn <leader>u <cmd>UndotreeToggle<cr>
endif
